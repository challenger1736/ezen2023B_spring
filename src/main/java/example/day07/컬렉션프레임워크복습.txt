컬렉션 프레임워크
    1. List : 저장순서/인덱스 o , 중복 허용
        ArrayList, Vector, LinkedList
    2. Set : 저장순서/인덱스 x, 중복 허용 x
        HashSet, TreeSet(얘는 순서 있음)
    3. Map : entry(key,value)저장, key 중복 불가능
        HashMap, Hashtable, TreeMap(얘는 순서 있음)

    검색을 강화시킨 컬렉션
        - TreeSet, TreeMap
        - 이진 트리 : 하나의 노드(뿌리) 시작해서 각 노드에 최대 2개의 노드 연결
        - 부모 노드의 객체와 비교 (낮은것은) 왼쪽 자식 (높은것은) 오른쪽 자식
        - 검색 좋은점?? 정렬 되었기 때문에 데이터 찾을때 유용하다.
        - 정렬을 하면 검색이 빠르다.
        - 기본값은 오름차순, 내림차순으로 변경

    스택/큐
        - 스택 : 후입 선출
            사용되는 용도 : ctrl + z (뒤로가기), JVM 스택 메모리

        - 큐 : 선입 선출
            사용되는 용도 : 프린트기(먼저 인쇄요청한 순서대로) , 스레드 풀(동기화=요청순서), 1인 식당 웨이팅을 걸어주는 일

                    System.out.println("가장 낮은 점수 : " + scores.first());
                    System.out.println("가장 높은 점수 : " + scores.last());
                    System.out.println("95점 아래 점수 : " + scores.lower(95));
                    System.out.println("95점 위의 점수 : " + scores.higher(95));
                    System.out.println("95점이거나 바로 아래 점수 : " + scores.floor(95));
                    System.out.println("85점이거나 바로 위의 점수 : " + scores.ceiling(85));



자료 구조에 관한 그림
p.641 List
p.647 LinkedList
p.650 Set
p.656 Map
p.664 Tree 이진트리 : 665p TreeSet, 668p TreeMap
p.676 Stack/Queue

안써도됨, 하지만 상황에따라 편하게 쓰려고 적합하게 쓰려고 쓰는 컬렉션들