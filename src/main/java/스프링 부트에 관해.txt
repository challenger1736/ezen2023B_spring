
스프링은 오류볼 때 제일 먼저 나오는 것을 본다(제일 위)

JDK : 자바 개발도구 ( javac 포함 , jar 포함 )
라이브러리 : (도구) 클래스/인터페이스 모임.
프레임워크 : (틀) 프로그램 개발하기 위해 틀을 제공하는 프로그램.

SPRING       : 자바를 이용한 라이브러리 들의 집합들로 만든 프레임워크
SPRINB BOOT   : SPRING 간소화 설정            vs  NODE.JS
   - spring webapps
   - spring Batch


스프링 프로젝트가 아닌 그레이들 프로젝트이다.

1. 프로젝트
        Project : Gradle-Groovy
                Gradle : 빌드 관리 도구               VS              Maven
                    - 스프링 프레임워크,라이브러리 다운로드 / 결국 외부라이브러리들을 설치하고 관리해주는 소프트웨어들이다.

        Language : java

        spring boot : 3.x [ 3점대 버전이상 ]> 2점대에서 3점대로 바꼈다고 해서 코드를 못 쓰는것은 아니나, 단 라이브러리가 변경된 것.
        [추후 변경 가능]

        Packaging : Jar

        java : 17 (spring boot 3.x 이상)

2. 프로젝트 메타데이터/정보
        Artifact : 홈페이지 명

        Pakage name : 홈페이지 주소를 반대로 작성해서 패키지을 주로 함.(예를들어 네이버 naver.com / com -> naver)

3. 외부 라이브러리 추가 Dependencies
        1. Spring Web
        2. H2 Database // 우린 안쓰는데 실무에서 간혹 백엔드하는 사람들이 쓰는 디펜던시 db서버 없이 웹서버로 db 사용하는 것. (테스트 용/ 간단한 개발) <----> MYSQL
        3. Mustache     // 화면구현(템플릿 엔진)
                템플릿 엔진 : 1.JSP 2.*Mustable 3. Thymeleaf(타임리프) 4.*React.js 5.Vue.js
        4. Spring data JPA : RDBMS를 JAVA객체 지향으로 매칭하는 도구 (S)

4. 프로젝트 파일 구조
        .idea           : 인텔리제이 설정 파일
        gradle          : 그레이들(빌드)실행 도구
        * src             : 코드 소스 파일 * 중요
         -main
          -- java       : 자바 소스 파일
           > 패키지들이 들어가겠지
           -- com등등등

          -- resources  : 프론트 html css js프로젝트 설정 파일, 정적 파일(동영상, 파일 이미지등)
           -- static    : HTML,CSS,JS,IMG 등등
           -- templates : 템플릿(JSP, Mustache, Thymeleaf, react 등등)
           -- application.properties : 프로젝트 설정 파일

         -test                       : 테스트 소스 파일
        gitignore                    : 깃 커밋 안할 파일
        * build.gardle                 : 프로젝트에 등록할 라이브러리 코드를 작성하는 곳 * 중요
        외부라이브러리 : JDK, 스프링부터 관련 클래스들

5. 프로젝트 실행
    톰캣(was: 자바웹서버 프로그램) 내장 서버, 기본 port는 8080

- ip : 네트워크를 사용하는 pc의 식별 번호.
        - 인터넷 프로토콜의 약자 (프로토콜이란? 규약, 약속, 규칙, 패턴)
                - 규칙

                        ipv4
                                - 첫 자리는 0~127 사이 +72
                                - 0~255 사이의 숫자로 4자리 구성된 번호
                        ipv6 >> ip자리가 부족해져서 추가로 나옴


        - 네트워크를 사용하는 컴퓨터의 고유 식별번호
        - localhost : 내 컴퓨터 라는 뜻 /  = 127.0.0.1 도 마찬가지
        - 내 ip 알기 : 윈도우 클릭 - cmd - 명령프롬프트
                - ipconfig 입력후 엔터 - 192.168.17.85

                 http://localhost:8080
                                http://127.0.0.1:8080
                                http://192.168.17.85:8080 다 같다.
vs

- port : pc내의 식별 번호.
        - 인터넷 프로토콜내 프로세스(프로그램?)의 식별번호
        - 0~65.535까지 중 사용가능. [0~1023] 주요 통신이 이미 정해져 있음.
            - 주요
                - HTTP : 80, HTTPS : 443 ...
        - 그 외 중복없이 자유적으로 할당해서 사용
                - MYSQL :3306 , 톰캣 : 8080 ...


    resources패키지의 application.properties 파일에 server.port = 포트번호 로 포트 바꿀 수 있음.

- ip와 port 이용한 네트워크 식별
        http://ip주소:포트번호
                                 http://localhost:8080
                                 http://127.0.0.1:8080
                                 http://192.168.17.85:8080 다 같다.


                                 http://www.naver.com/ 문자로 바꿔주는 서비스를 이용한 것 DNS

해당 ip와 port 일치한 서버 pc에게 지원(데이터 HTML) 요청하기.


